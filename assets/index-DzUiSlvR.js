(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const r of t.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function i(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(e){if(e.ep)return;e.ep=!0;const t=i(e);fetch(e.href,t)}})();class g{constructor(){this.reset()}reset(){return this.board=Array(9).fill(null),this.currentPlayer="X",this.gameStatus="in progress",this.winner=null,this.winningCells=null,this}makeMove(n){return this.gameStatus!=="in progress"||this.board[n]!==null?!1:(this.board[n]=this.currentPlayer,this.checkWin()?(this.gameStatus="win",this.winner=this.currentPlayer):this.checkTie()?this.gameStatus="tie":this.currentPlayer=this.currentPlayer==="X"?"O":"X",!0)}checkWin(){const n=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(const i of n){const[s,e,t]=i;if(this.board[s]!==null&&this.board[s]===this.board[e]&&this.board[s]===this.board[t])return this.winningCells=i,!0}return!1}checkTie(){return this.board.every(n=>n!==null)}getCurrentPlayer(){return this.currentPlayer}getGameStatus(){return this.gameStatus}getWinner(){return this.winner}getWinningCells(){return this.winningCells?[...this.winningCells]:null}getBoard(){return[...this.board]}}const o=new g;class f{constructor(){this.boardElement=document.getElementById("game-board"),this.statusElement=document.getElementById("game-status"),this.resetButton=document.getElementById("reset-button"),this.winningLine=document.getElementById("winning-line"),this.cells=Array.from(document.querySelectorAll(".cell")),this.bindEvents(),this.render()}bindEvents(){this.cells.forEach(n=>{n.addEventListener("click",()=>{const i=parseInt(n.getAttribute("data-index"));this.handleCellClick(i)})}),this.resetButton.addEventListener("click",()=>{this.resetGame()})}handleCellClick(n){o.makeMove(n)&&this.render()}resetGame(){o.reset(),this.render()}drawWinningLine(n){if(!n){this.winningLine.classList.add("hidden");return}const i=this.cells[n[0]].getBoundingClientRect(),s=this.cells[n[2]].getBoundingClientRect(),e=this.boardElement.getBoundingClientRect(),t=i.left-e.left+i.width/2,r=i.top-e.top+i.height/2,l=s.left-e.left+s.width/2,c=s.top-e.top+s.height/2,d=Math.sqrt(Math.pow(l-t,2)+Math.pow(c-r,2)),h=Math.atan2(c-r,l-t)*(180/Math.PI);this.winningLine.style.left=`${t}px`,this.winningLine.style.top=`${r}px`,this.winningLine.style.width=`${d}px`,this.winningLine.style.transform=`rotate(${h}deg)`;const u=o.getWinner();this.winningLine.style.backgroundColor=u==="X"?"#e74c3c":"#3498db",this.winningLine.classList.remove("hidden")}render(){const n=o.getBoard(),i=o.getGameStatus(),s=o.getWinningCells();this.cells.forEach((t,r)=>{const l=n[r];t.textContent=l||"",t.classList.remove("x","o","winner"),l&&(t.classList.add(l.toLowerCase()),s&&s.includes(r)&&t.classList.add("winner"))});let e="";i==="in progress"?e=`Player ${o.getCurrentPlayer()}'s turn`:i==="win"?e=`Player ${o.getWinner()} wins!`:i==="tie"&&(e="Game ended in a tie!"),this.statusElement.textContent=e,i==="win"?setTimeout(()=>this.drawWinningLine(s),50):this.winningLine.classList.add("hidden")}}document.addEventListener("DOMContentLoaded",()=>{new f});
